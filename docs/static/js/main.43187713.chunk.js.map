{"version":3,"sources":["sections/InfraestructuraWeb.js","sections/InfrestructuraDesktop.js","sections/Comenzando.js","sections/FileManager.js","sections/DropZoneFile.js","sections/Homepage.js","sections/Appini.js","App.js","serviceWorker.js","index.js"],"names":["Paragraph","Typography","Title","InfraestructuraWeb","language","style","docco","level","InfraestructuraDesktop","Text","Comenzando","href","code","Column","Table","AdministradorDeArchivos","copyable","dataSource","key","atributo","descripcion","tipo","title","dataIndex","parametro","DropZoneFile","Homepage","Appini","SubMenu","Menu","Header","Layout","Content","Sider","App","props","toggleCollapsed","setState","collapsed","state","toggleContent","event","console","log","item","children","length","content","bind","className","trigger","collapsible","this","onCollapse","defaultSelectedKeys","mode","theme","Item","onClick","type","background","padding","span","lineHeight","kay","disabled","Search","placeholder","width","onSearch","value","margin","minHeight","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43187713.chunk.js","sourcesContent":["import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Typography } from 'antd';\nconst { Paragraph, Title } = Typography;\n\nconst codeString = \"+---+ archetype-editor-web\\n\\t|---+ backend\\n\\t\\t|---+ models\\n\\t\\t|---+ public\\n\\t\\t|---+ routes\\n\\t\\t|---+ db.js\\n\\t\\t|---+ index.js\\n\\t|---+ frontend\\n\\t\\t|---+ src\\n\\t\\t\\t|---+ actions\\n\\t\\t\\t|---+ components\\n\\t\\t\\t|---+ store\\n\\t\\t|---+ index.html\\n\\t|---+ .babelrc\\n\\t|---+ .gitignore\\n\\t|---+ package.json\\n\\t|---+ package-lock.json\\n\\t|---+ webpack.config.json\\n\";\n\n\nexport const InfraestructuraWeb = {\n    \"title\": \"Infraestructura Aplicaci√≥n Web\",\n    \"content\": (\n        <div>\n            \n                <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    <Paragraph>\n                        {\n                            codeString\n                        }\n                    </Paragraph>\n                </SyntaxHighlighter>\n            \n            <Title level={2}>El directorio \"backend\"</Title>\n            <p>En este directorio se encuentran todos los archivos relacionados con el servidor.</p>\n            <Title level={3}>El directorio \"models\"</Title>\n            <p>En este directorio se encuentran todos los archivos relacionados con los modelos de datos, es en cada archivo de este directorio donde se define el schema correspondiente al dato de la DB MongoDB.</p>\n            <Title level={3}>El directorio \"public\"</Title>\n            <p>En este directorio se encuentran todos los archivos p√∫blicos del servidor, en este caso aqu√≠ se almacena el c√≥digo compilado a html, css, y js puro.</p>\n            <Title level={3}>El directorio \"routes\"</Title>\n            <p>En este directorio se encuentran todos los archivos relacionados con las rutas para el manejo de peticiones desde la aplicaci√≥n web/desktop para la interacci√≥n con la DB.</p>\n            <Title level={3}>El archivo \"db.js\"</Title>\n            <p>En este archivo se encuentra la conexi√≥n a la base de datos MongoDB, mediante mongoose.</p>\n            <Title level={3}>El archivo \"index.js\"</Title>\n            <p>En este archivo se encuentra el c√≥digo principal que se ejecutar√° en el servidor, es aqu√≠ donde se define el comportamiento l√≥gico del servidor, aqu√≠ se inicializa el servidor express y se le asignan los pa√°metros correspondientes (rutas, etc).</p>\n            <Title level={2}>El directorio \"frontend\"</Title>\n            <p>En este directorio se encuentran todos los archivos relacionados con la aplicaci√≥n cliente.</p>\n            <Title level={3}>El directorio \"src\"</Title>\n            <p>En este directorio se encuentran los componentes, el store, y las actions correspondientes para el uso de react-redux.</p>\n            <Title level={3}>El archivo \"index.html\"</Title>\n            <p>En este archivo se encuentra el c√≥digo html principal en donde se monta la aplicaci√≥n react.</p>   \n        </div>\n        )\n}","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { Typography } from 'antd';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst { Paragraph, Title } = Typography;\n\nconst codeString = \"+---+ archetype-editor-desktop\\n\\t|---+ public\\n\\t\\t|---+ electron.js\\n\\t\\t|---+ index.html\\n\\t|---+ src\\n\\t\\t|---+ actions\\n\\t\\t|---+ components\\n\\t\\t|---+ store\\n\\t|---+ .gitignore\\n\\t|---+ package.json\\n\\t|---+ package-lock.json\\n\";\n\nexport const InfraestructuraDesktop = {\n    \"title\": \"Infraestructura Aplicaci√≥n Desktop\",\n    \"content\": (\n        <div>\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n                <Paragraph>\n                    {\n                        codeString\n                    }\n                </Paragraph>\n            </SyntaxHighlighter>            \n            <Title level={2}>El directorio \"public\"</Title>\n            <p>En este directorio se encuentra el archivo index.html que se monta en la aplicaci√≥n electron si es que se est√° en modo producci√≥n y el archivo \"electron.js\", que es el cl√°sico \"main.js\" de electron, es decir, el c√≥digo que define la aplicaci√≥n electron.</p>\n            <Title level={3}>El directorio \"src\"</Title>\n            <p>En este directorio se encuentran los componentes, el store, y las actions correspondientes para el uso de react-redux.</p>\n            <Title level={3}>El archivo \"index.html\"</Title>\n            <p>En este archivo se encuentra el c√≥digo html principal en donde se monta la aplicaci√≥n react.</p>\n        </div>\n        )\n}","import React from 'react';\nimport { Typography } from 'antd';\nconst { Paragraph, Title, Text } = Typography;\n\nexport const Comenzando = {\n    \"title\": \"Comenzando\",\n    \"content\": (\n        <div>\n            <Title level={2}>Pre-Requisitos</Title>\n            <Paragraph>\n                Primero es necesario tener instalado NodeJS en el equipo, para esto se descarga mediante el sitio web oficial:\n            </Paragraph>\n            <a href=\"https://nodejs.org/es/\">NodeJS.</a>\n            <Paragraph>\n                Tambi√©n es necesario tener instalado MongoDB en el equipo, para esto se descarga mediante el sitio web oficial:\n            </Paragraph>\n            <a href=\"https://www.mongodb.com/es\">MongoDB.</a>\n            <Paragraph>\n                Y se debe tener en ejecuci√≥n el servidor MongoDB.\n            </Paragraph>\n            <Title level={2}>Instalaci√≥n y Comandos b√°sicos</Title>\n            <Paragraph>\n                Primero se debe hubicar una consola o terminal en el directorio del proyecto (la aplicaci√≥n web est√° en un directorio separado de la aplicaci√≥n de escritorio), luego se debe acceder por separado a cada directorio y ejecutar el siguiente comando:\n            </Paragraph>\n            <Text code>npm install</Text>\n            <Paragraph>\n                Luego, para el caso de la aplicaci√≥n web se debe ejecutar el siguiente comando para poner en marcha tanto el servidor de desarrollo de react como el servidor express (NodeJS) que recibe las peticiones de la aplicaci√≥n web:\n            </Paragraph>\n            <Text code>npm run dev</Text>\n            <Paragraph>\n                El siguiente comando en la aplicaci√≥n web realiza el traspaso de c√≥digo en lenguaje jsx a javascript puro mediante webpack:\n            </Paragraph>\n            <Text code>npm run build</Text>\n            <Paragraph>\n                Este comando posiciona el c√≥digo de salida en el directorio del cual el servidor Express carga dicho archivo (esto es m√°s que nada para la etapa de producci√≥n).\n            </Paragraph>\n            <Paragraph>\n                El siguiente comando en la aplicaci√≥n web ejecuta el servidor Express en modo de producci√≥n:\n            </Paragraph>\n            <Text code>npm start</Text>\n            <Paragraph>\n                Ahora para el caso de la aplicaci√≥n de escritorio, se describen los siguientes comandos:\n            </Paragraph>\n            <Text code>npm start</Text>\n            <Paragraph>\n                Este comando pone en marcha el servidor de desarrollo para el ambiente de ReactJS.\n            </Paragraph>\n            <Text code>npm run build</Text>\n            <Paragraph>\n                Este comando genera el c√≥digo javascript puro en base al c√≥digo ReactJS.\n            </Paragraph>\n            <Text code>npm run electron-dev</Text>\n            <Paragraph>\n                Este comando es el que ejecuta tanto el entorno de desarrollo de ReactJS como la aplicaci√≥n ElectronJS.\n            </Paragraph>\n            <Text code>npm run pack</Text>\n            <Paragraph>\n                Este comando empaqueta la aplicaci√≥n ElectronJS.\n            </Paragraph>\n            <Text code>npm run dist</Text>\n            <Paragraph>\n                Finalmente este comando genera el instalador de la apliaci√≥n ElectronJS.\n            </Paragraph>\n        </div>\n        )\n}","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Typography, Table } from 'antd';\nconst { Paragraph, Title } = Typography;\nconst { Column } = Table;\nconst codeString = \"import React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\nimport { toggleFile, onEdit, changeName, removeFile } from '../actions/FileManager';\\nimport { handlerDownload } from '../actions/home';\\nimport { Tabs, Icon, Typography, Modal } from 'antd';\\nimport './FileManager.css';\\nconst { TabPane } = Tabs;\\nconst { Paragraph } = Typography;\\nconst { confirm } = Modal;\\nclass FileManager extends Component {\\n\\trender(){\\n\\t\\treturn (\\n\\t\\t\\t<div className='file-manager'>\\n\\t\\t\\t\\t<Tabs\\n\\t\\t\\t\\t\\tonChange={this.props.handlerToggle}\\n\\t\\t\\t\\t\\tactiveKey={this.props.currentFile}\\n\\t\\t\\t\\t\\ttype='editable-card'\\n\\t\\t\\t\\t\\tonEdit={this.props.handlerEdit}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t{this.props.files.map((pane, indx) => (\\n\\t\\t\\t\\t\\t\\t<TabPane className='tab-content' tab={\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Paragraph className='display-inline' editable={{ onChange: str=>{this.props.handlerChangeName(str, pane.key, indx, this)} }}>{pane.title}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Paragraph>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Icon type='close' className='close' onClick={(e)=>{this.props.showConfirm(e, this.props.currentFile, this.props.files)}}/>\\n\\t\\t\\t\\t\\t\\t\\t</div>} key={pane.key}>\\n\\t\\t\\t\\t\\t\\t\\t{pane.content}\\n\\t\\t\\t\\t\\t\\t</TabPane>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</Tabs>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n}\\nconst mapStateToProps = state => {\\n\\treturn {\\n\\t\\tnewTabIndex: state.newTabIndex,\\n\\t\\tfiles: state.files,\\n\\t\\tcurrentFile: state.currentFile\\n\\t};\\n}\\nconst mapDispatchToProps = dispatch => {\\n\\treturn {\\n\\t\\thandlerToggle(activeKey) {\\n\\t\\t\\tdispatch(toggleFile(activeKey));\\n\\t\\t},\\n\\t\\thandlerEdit(targetKey, action){\\n\\t\\t\\tdispatch(onEdit(action));\\n\\t\\t},\\n\\t\\thandlerChangeName(newName, key, indx, tab){\\n\\t\\t\\tdispatch(changeName(newName, key, indx));\\n\\t\\t\\ttab.forceUpdate();\\n\\t\\t},\\n\\t\\tshowConfirm(e, key, files) {\\n\\t\\t\\tconfirm({\\n\\t\\t\\t\\ttitle: 'Cuidado!',\\n\\t\\t\\t\\tcontent: 'Haz realizado cambios en el archivo, ¬øDeseas descargar el archivo antes de cerrarlo?',\\n\\t\\t\\t\\tonOk() {\\n\\t\\t\\t\\t\\tconst fileTarget = files.filter(ofile => ofile.key === key)[0];\\n\\t\\t\\t\\t\\tif(fileTarget && fileTarget.saved === false){\\n\\t\\t\\t\\t\\t\\thandlerDownload(dispatch, key, files);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdispatch(removeFile(key));\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tonCancel() {dispatch(removeFile(key));},\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n}\\nexport default connect(mapStateToProps, mapDispatchToProps)(FileManager);\";\nconst tablaShowConfirm = [\n    {\n      key: '1',\n      parametro: 'e',\n      descripcion: 'evento.',\n      tipo: 'evento',\n    },\n    {\n        key: '2',\n        parametro: 'key',\n        descripcion: 'La key correspondiente al archivo correspondiente.',\n        tipo: 'String',\n      },\n      {\n        key: '3',\n        parametro: 'files',\n        descripcion: 'El arreglo que contiene los archivos en uso.',\n        tipo: 'Array',\n      },\n  ];\n\nconst tablaHandlerChangeName = [\n    {\n      key: '1',\n      parametro: 'newName',\n      descripcion: 'Nuevo nombre para el archivo (obtenido al editar el texto de la pesta√±a del archivo en cuesti√≥n).',\n      tipo: 'String',\n    },\n    {\n        key: '2',\n        parametro: 'key',\n        descripcion: 'La key correspondiente al archivo correspondiente.',\n        tipo: 'String',\n      },\n      {\n        key: '3',\n        parametro: 'indx',\n        descripcion: 'El √≠ndice del archivo en el arreglo de archivos.',\n        tipo: 'N√∫mero',\n      },\n      {\n        key: '4',\n        parametro: 'tab',\n        descripcion: 'El objeto FileManager en s√≠, para actualizar la interfaz al cambiar el nombre.',\n        tipo: 'Component',\n      },\n  ];\n\n  const tablaHandlerEdit = [\n    {\n      key: '1',\n      parametro: 'targetKey',\n      descripcion: 'La key correspondiente al archivo en el que se ejecutar√° la acci√≥n.',\n      tipo: 'String',\n    },\n    {\n        key: '2',\n        parametro: 'action',\n        descripcion: 'acci√≥n devuelta por el componenete de ant design (add, remove, etc)',\n        tipo: 'String',\n      }\n  ];\nconst tablaHandlerToggle = [\n    {\n      key: '1',\n      parametro: 'activeKey',\n      descripcion: 'La key correspondiente al archivo que se mostrar√° (pesta√±a).',\n      tipo: 'String',\n    }\n  ];\n\nconst tablaFileManager = [\n    {\n      key: '1',\n      atributo: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },{\n        key: '2',\n        atributo: 'files',\n        descripcion: 'El arreglo que contiene los archivos en uso.',\n        tipo: 'Array',\n    },{\n        key: '3',\n        atributo: 'currentFile',\n        descripcion: 'La key correspondiente al archivo actual (el que se est√° visualizando, cuando no hay archivos abiertos, este valor es null).',\n        tipo: 'String',\n    }\n  ];\n\n\nexport const AdministradorDeArchivos = {\n    \"title\": \"Administrador de archivos\",\n    \"content\": (\n        <div>\n            <Title level={2}>El componenete \"FileManager\".</Title>\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    <Paragraph copyable>\n                        {\n                            codeString\n                        }\n                    </Paragraph>\n                </SyntaxHighlighter>\n            <Table dataSource={tablaFileManager}>\n                <Column title=\"Atributo\" dataIndex=\"atributo\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n            <Title level={4}>La funci√≥n \"map\" .</Title>\n            <p>La funci√≥n \"map\" itera el arreglo de archivos global definido en el store.js para generar una pesta√±a por cada archivo en uso.</p>\n            <Title level={4}>La funci√≥n \"mapStateToProps\" .</Title>\n            <p>La funci√≥n \"mapStateToProps\" es la que como dice su nombre, mapea el estado del store.js como propiedad de la clase \"FileManager\" (ver documentaci√≥n de redux y react-redux para m√°s informaci√≥n).</p>\n            <Title level={4}>La funci√≥n \"mapDispatchToProps\" .</Title>\n            <p>La funci√≥n \"mapDispatchToProps\" es la que como dice su nombre, mapea el despacho (dispatch) de acciones (actions) que son cargadas desde \"actions/[component].js\" (Es esta la que despacha la acci√≥n con el objeto con el respectivo \"type\" y \"datos\" necesarios, enviando este objeto al reducer ubicado en \"store.js\" que ejecuta una acci√≥n para actualizar el estado global de la aplicaci√≥n dependiendo del type de la acci√≥n) como propiedad de la clase \"FileManager\" (ver documentaci√≥n de redux y react-redux para m√°s informaci√≥n).</p>\n            <Title level={2}>La funci√≥n \"handlerToggle\" .</Title>\n            <Table dataSource={tablaHandlerToggle}>\n                <Column title=\"Parametro\" dataIndex=\"parametro\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n            <Title level={2}>La funci√≥n \"handlerEdit\" .</Title>\n            <Table dataSource={tablaHandlerEdit}>\n                <Column title=\"Parametro\" dataIndex=\"parametro\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n            <Title level={2}>La funci√≥n \"handlerChangeName\" .</Title>\n            <Table dataSource={tablaHandlerChangeName}>\n                <Column title=\"Parametro\" dataIndex=\"parametro\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n            <Title level={2}>La funci√≥n \"showConfirm\" .</Title>\n            <Table dataSource={tablaShowConfirm}>\n                <Column title=\"Parametro\" dataIndex=\"parametro\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n        </div>\n        )\n}","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Typography, Table } from 'antd';\nconst { Paragraph, Title } = Typography;\nconst { Column } = Table;\nconst codeString = \"import React, { Component } from 'react'\\nimport { connect } from 'react-redux';\\nimport { openFile } from '../actions/DropZoneFile';\\nimport { toggleOpenFileDialog } from '../actions/home';\\nimport { feedBackMessage } from '../actions/others';\\nimport { Icon, message } from 'antd';\\nimport './DropZoneFile.css'\\nclass Dropzone extends Component {\\n\\tconstructor(props) {\\n\\t\\tsuper(props);\\n\\t\\tthis.state = { hover: false };\\n\\t\\tthis.fileInputRef = React.createRef();\\n\\t\\tthis.openFileDialog = this.openFileDialog.bind(this);\\n\\t\\tthis.onFilesAdded = this.onFilesAdded.bind(this);\\n\\t\\tthis.onDragOver = this.onDragOver.bind(this);\\n\\t\\tthis.onDragLeave = this.onDragLeave.bind(this);\\n\\t\\tthis.onDrop = this.onDrop.bind(this)\\n\\t}\\n\\topenFileDialog() {\\n\\t\\tif (this.props.disabled) return;\\n\\t\\tthis.fileInputRef.current.click();\\n\\t}\\n\\tonFilesAdded(evt) {\\n\\t\\tif (this.props.disabled) return;\\n\\t\\tconst files = evt.target.files;\\n\\t\\tconst aFiles = this.fileListToArray(files);\\n\\t\\tif(aFiles.length > 0){\\n\\t\\t\\tthis.props.handlerAddFiles(aFiles, this.props.newTabIndex, this.props.files, this.fileInputRef);\\n\\t\\t}\\n\\t}\\n\\tonDragOver(evt) {\\n\\t\\tevt.preventDefault();\\n\\t\\tif (this.props.disabled) return;\\n\\t\\tthis.setState({ hover: true });\\n\\t}\\n\\tonDragLeave() {\\n\\t\\tthis.setState({ hover: false });\\n\\t}\\n\\tonDrop(event) {\\n\\t\\tevent.preventDefault();\\n\\t\\tif (this.props.disabled) return;\\n\\t\\tconst files = event.dataTransfer.files;\\n\\t\\tconst aFiles = this.fileListToArray(files);\\n\\t\\tif(aFiles.length > 0){\\n\\t\\t\\tthis.props.handlerAddFiles(aFiles, this.props.newTabIndex, this.props.files, this.fileInputRef);\\n\\t\\t}\\n\\t\\tthis.setState({ hover: false });\\n\\t}\\n\\tfileListToArray(list) {\\n\\t\\tconst array = [];\\n\\t\\tfor (var i = 0; i < list.length; i++) {\\n\\t\\t\\tarray.push(list.item(i));\\n\\t\\t}\\n\\t\\treturn array;\\n\\t}\\n\\trender() {\\n\\t\\treturn (\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclassName={`Dropzone ${this.state.hover ? 'hover' : ''}`}\\n\\t\\t\\t\\tonDragOver={this.onDragOver}\\n\\t\\t\\t\\tonDragLeave={this.onDragLeave}\\n\\t\\t\\t\\tonDrop={this.onDrop}\\n\\t\\t\\t\\tonClick={this.openFileDialog}\\n\\t\\t\\t\\tstyle={{ cursor: this.props.disabled ? 'default' : 'pointer' }}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\tref={this.fileInputRef}\\n\\t\\t\\t\\t\\tclassName='FileInput'\\n\\t\\t\\t\\t\\ttype='file'\\n\\t\\t\\t\\t\\taccept='.json, .xml, .adl'\\n\\t\\t\\t\\t\\tmultiple\\n\\t\\t\\t\\t\\tonChange={this.onFilesAdded}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<Icon type='inbox' />\\n\\t\\t\\t\\t<span>Haz click o arrastra archivos a esta √°rea para abrirlos</span>\\n\\t\\t\\t</div>\\n\\t\\t)\\n\\t}\\n}\\nconst mapStateToProps = state => {\\n\\treturn{\\n\\t\\tnewTabIndex: state.newTabIndex,\\n\\t\\tfiles: state.files\\n\\t};\\n}\\nconst mapDispatchToProps = dispatch => {\\n\\treturn {\\n\\t\\thandlerAddFiles(aFiles, newTabIndex, files, ref) {\\n\\t\\t\\tif (window.FileReader) {\\n\\t\\t\\taFiles.forEach(file => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst ext = file.name.split('.').pop();\\n\\t\\t\\t\\t\\tif (ext === 'adl' || ext === 'json' || ext === 'xml' ) {\\n\\t\\t\\t\\t\\t\\tconst equalFiles = files.filter(ofile => ofile.title === file.name);\\n\\t\\t\\t\\t\\t\\tif (equalFiles.length <= 0) {\\n\\t\\t\\t\\t\\t\\tconst reader = new FileReader();\\n\\t\\t\\t\\t\\t\\tconst nFile = { title: '', content: '', saved: false, key: '0' };\\n\\t\\t\\t\\t\\t\\tnFile.key = (newTabIndex + 1).toString();\\n\\t\\t\\t\\t\\t\\tnewTabIndex+=1;\\n\\t\\t\\t\\t\\t\\tnFile.title = file.name;\\n\\t\\t\\t\\t\\t\\treader.onload = (r)=>{\\n\\t\\t\\t\\t\\t\\t\\tnFile.content = r.target.result;\\n\\t\\t\\t\\t\\t\\t\\tfiles = files.concat(nFile);\\n\\t\\t\\t\\t\\t\\t\\tdispatch(openFile(files, newTabIndex));\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\treader.readAsText(file, 'UTF-8');\\n\\t\\t\\t\\t\\t\\tfeedBackMessage({ type: 'success', msg: 'El archivo ' + file.name + ' se carg√≥ correctamente.'});\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tfeedBackMessage({ type: 'warning', msg: 'El archivo ' + file.name + ' no se carg√≥ debido a que ya se encuentra en uso.'});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\t\\tfeedBackMessage({ type: 'error', msg: 'El archivo ' + file.name + ' no se pudo cargar.'});\\n\\t\\t\\t\\t\\t\\tconsole.log(error);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tref.current.value = null;\\n\\t\\t\\t\\tdispatch(toggleOpenFileDialog(false));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropzone);\";\nconst tablahandlerAddFiles = [\n    {\n      key: '1',\n      parametro: 'aFiles',\n      descripcion: 'Arreglo de objetos json con los datos de cada archivo seleccionado para cargar.',\n      tipo: 'Array',\n    },\n    {\n      key: '2',\n      parametro: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },\n    {\n      key: '3',\n      parametro: 'files',\n      descripcion: 'El arreglo que contiene los archivos en uso.',\n      tipo: 'Array',\n    },\n    {\n      key: '4',\n      parametro: 'ref',\n      descripcion: 'Referencia React al <input />.',\n      tipo: 'Referencia React',\n    }\n];\nconst tablaDropZoneFile = [\n    {\n      key: '1',\n      atributo: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },{\n        key: '2',\n        atributo: 'files',\n        descripcion: 'El arreglo que contiene los archivos en uso.',\n        tipo: 'Array',\n    }\n];\nexport const DropZoneFile = {\n    \"title\": \"Cargador de archivos\",\n    \"content\": (\n        <div>\n            <Title level={2}>El componenete \"DropZoneFile\".</Title>\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    <Paragraph copyable>\n                        {\n                            codeString\n                        }\n                    </Paragraph>\n                </SyntaxHighlighter>\n            <Table dataSource={tablaDropZoneFile}>\n                <Column title=\"Atributo\" dataIndex=\"atributo\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n            <Title level={4}>La funci√≥n \"mapStateToProps\" .</Title>\n            <p>La funci√≥n \"mapStateToProps\" es la que como dice su nombre, mapea el estado del store.js como propiedad de la clase \"FileManager\" (ver documentaci√≥n de redux y react-redux para m√°s informaci√≥n).</p>\n            <Title level={4}>La funci√≥n \"mapDispatchToProps\" .</Title>\n            <p>La funci√≥n \"mapDispatchToProps\" es la que como dice su nombre, mapea el despacho (dispatch) de acciones (actions) que son cargadas desde \"actions/[component].js\" (Es esta la que despacha la acci√≥n con el objeto con el respectivo \"type\" y \"datos\" necesarios, enviando este objeto al reducer ubicado en \"store.js\" que ejecuta una acci√≥n para actualizar el estado global de la aplicaci√≥n dependiendo del type de la acci√≥n) como propiedad de la clase \"FileManager\" (ver documentaci√≥n de redux y react-redux para m√°s informaci√≥n).</p>\n            <Title level={2}>La funci√≥n \"handlerAddFiles\" .</Title>\n            <p>\n              Esta funci√≥n es la encargada de analizar el arreglo de los archivos seleccionados por el usuario para\n              para luego agregarlos uno por uno al estado global de la aplicaci√≥n (store), mediante el despacho de la acci√≥n\n              \"openFile\".\n            </p>\n            <Table dataSource={tablahandlerAddFiles}>\n                <Column title=\"Parametro\" dataIndex=\"parametro\" />\n                <Column title=\"Descripci√≥n\" dataIndex=\"descripcion\" />\n                <Column title=\"Tipo\" dataIndex=\"tipo\" />\n            </Table>\n        </div>\n        )\n}","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Typography, Table } from 'antd';\nconst { Paragraph, Title } = Typography;\nconst { Column } = Table;\nconst codeString = \"import React, { Component } from 'react'; \\nimport { connect } from 'react-redux';\\nimport { changeTitle, toggleOpenFileDialog, handlerDownload, handlerSaveAs } from '../actions/home';\\nimport FileManager from './FileManager';\\nimport { onEdit } from '../actions/FileManager';\\nimport DropZone from './DropZoneFile';\\nimport { Button, Layout, Menu, Icon, Dropdown, Modal, Row } from 'antd';\\nimport './home.css';\\nimport ButtonGroup from 'antd/lib/button/button-group';\\nconst { SubMenu } = Menu;\\nconst { Content, Footer, Sider} = Layout;\\nvar Maximize=true;\\nclass Home extends Component {\\n\\tconstructor(props){\\n\\t\\tsuper(props);\\n\\t\\tthis.toggle = this.toggle.bind(this);\\n\\t\\tthis.handlerWindowClose = this.handlerWindowClose.bind(this);\\n\\t\\tthis.handlerWindowMinimize = this.handlerWindowMinimize.bind(this);\\n\\t\\tthis.handlerWindowMaximize = this.handlerWindowMaximize.bind(this);\\n\\t\\tthis.handlerWindowRestore = this.handlerWindowRestore.bind(this);\\n\\t\\tthis.state = {collapsed:false};\\n\\t\\tthis.MenuFile = this.MenuFile.bind(this);\\n\\t\\tthis.MenuHelp = this.MenuHelp.bind(this);\\n\\t\\tthis.MenuEdit = this.MenuEdit.bind(this);\\n\\t\\tthis.MenuSelection = this.MenuSelection.bind(this);\\n\\t}\\n\\tMenuFile() {\\n\\t\\treturn(<Menu theme='light'>\\n\\t\\t\\t<Menu.Item key='nwfile' onClick={this.props.handlerAdd}><Icon type='file' /> Nuevo Archivo</Menu.Item>\\n\\t\\t\\t<Menu.Item key='opfile' onClick={() => this.props.handlerDialogOpenFile(true)}>\\n\\t\\t\\t\\t<Icon type='upload' /> Abrir archivo\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item key='svsave' onClick={()=>{this.props.handlerDownloadFile(this.props.electron.ipcRenderer, this.props.currentFile, this.props.files)}}>\\n\\t\\t\\t\\t<Icon type='download' /> Guardar Archivo\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item key='svsaveas' onClick={()=>{this.props.handlerSaveAsFile(this.props.electron.ipcRenderer, this.props.currentFile, this.props.files)}}>\\n\\t\\t\\t\\t<Icon type='download' /> Guardar Como...\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item key='quit' onClick={this.handlerWindowClose}>Salir</Menu.Item>\\n\\t\\t</Menu>);\\n\\t}\\n\\tMenuEdit(){\\n\\t\\treturn(<Menu theme='light'>\\n\\t\\t\\t<Menu.Item key='undo'>Deshacer</Menu.Item>\\n\\t\\t\\t<Menu.Item key='redo'>Rehacer</Menu.Item>\\n\\t\\t\\t<Menu.Item key='cut'>Cortar</Menu.Item>\\n\\t\\t\\t<Menu.Item key='copy'>Copiar</Menu.Item>\\n\\t\\t\\t<Menu.Item key='paste'>Pegar</Menu.Item>\\n\\t\\t</Menu>);\\n\\t}\\n\\tMenuSelection(){\\n\\t\\treturn(<Menu theme='light'>\\n\\t\\t\\t<Menu.Item key='slc'>Seleccionar todo</Menu.Item>\\n\\t\\t</Menu>);\\n\\t}\\n\\tMenuHelp(){\\n\\t\\treturn(<Menu theme='light'>\\n\\t\\t\\t<Menu.Item key='docu'>Documentation</Menu.Item>\\n\\t\\t\\t<Menu.Item key='about'>Acerca de Editor de Arquetipos</Menu.Item>\\n\\t\\t</Menu>);\\n\\t}\\n\\thandlerWindowMinimize(event) {\\n\\t\\tevent.preventDefault();\\n\\t\\tconst { ipcRenderer } = this.props.electron;\\n\\t\\tipcRenderer.send('mainWindow:minimize');\\n\\t\\tevent.stopPropagation();\\n\\t}\\n\\thandlerWindowClose(event) {\\n\\t\\tif (event.key && event.key !== 'quit') {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t}\\n\\t\\tconst { ipcRenderer } = this.props.electron;\\n\\t\\tipcRenderer.send('mainWindow:close');\\n\\t}\\n\\thandlerWindowMaximize(event) {\\n\\t\\tevent.preventDefault();\\n\\t\\tconst { ipcRenderer } = this.props.electron;\\n\\t\\tipcRenderer.send('mainWindow:maximize');\\n\\t\\tif(Maximize===true){\\n\\t\\t\\tMaximize=false;\\n\\t\\t\\tconsole.log(Maximize);\\n\\t\\t}\\n\\t\\tevent.stopPropagation();\\n\\t}\\n\\thandlerWindowRestore(event) {\\n\\t\\tevent.preventDefault();\\n\\t\\tconst { ipcRenderer } = this.props.electron;\\n\\t\\tipcRenderer.send('mainWindow:restore');\\n\\t\\tif(Maximize===false){\\n\\t\\t\\tMaximize=true;\\n\\t\\t\\tconsole.log(Maximize);\\n\\t\\t}\\n\\t\\tevent.stopPropagation();\\n\\t}\\n\\ttoggle() {\\n\\t\\tthis.setState(state => ({ collapse: !state.collapse }));\\n\\t}\\n\\trender(){\\n\\t\\treturn (\\n\\t\\t\\t<div >\\n\\t\\t\\t\\t<Modal\\n\\t\\t\\t\\t\\ttitle='Abrir Archivo'\\n\\t\\t\\t\\t\\tcentered\\n\\t\\t\\t\\t\\tvisible={this.props.dialogOpenFile}\\n\\t\\t\\t\\t\\tonOk={() => this.props.handlerDialogOpenFile(false)}\\n\\t\\t\\t\\t\\tonCancel={() => this.props.handlerDialogOpenFile(false)}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\thist<DropZone />\\n\\t\\t\\t\\t</Modal>\\n\\t\\t\\t\\t<Layout id='baraction' >\\n\\t\\t\\t\\t\\t<Row className='nav-bar'>\\n\\t\\t\\t\\t\\t\\t<ButtonGroup id='nomove1'>\\n\\t\\t\\t\\t\\t\\t\\t<Icon type='fire' />\\n\\t\\t\\t\\t\\t\\t\\t<Dropdown overlay={ this.MenuFile } trigger={['click']}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tArchivo\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</Dropdown>\\n\\t\\t\\t\\t\\t\\t\\t<Dropdown overlay={ this.MenuEdit } trigger={['click']}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEditar\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</Dropdown>\\n\\t\\t\\t\\t\\t\\t\\t<Dropdown overlay={ this.MenuSelection } trigger={['click']}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tSeleccion\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</Dropdown>\\n\\t\\t\\t\\t\\t\\t\\t<Dropdown overlay={ this.MenuHelp} trigger={['click']}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tAyuda\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t</Dropdown>\\n\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t\\t<ButtonGroup id='buttongroup'>\\n\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost  onClick={this.handlerWindowMinimize}>\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg aria-hidden='true' version='1.1' width='10' height='10'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<path fill='currentColor' d='M 0,5 10,5 10,6 0,6 Z' />\\n\\t\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t{ Maximize===true ?  (\\n\\t\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost onClick={this.handlerWindowMaximize}>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t‚ùê\\n\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t) : (\\n\\t\\t\\t\\t\\t\\t\\t<Button type='link' ghost onClick={this.handlerWindowRestore} >\\n\\t\\t\\t\\t\\t\\t\\t\\t‚ùê\\n\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t\\t)}\\n\\t\\t\\t\\t\\t\\t\\t<Button type='danger' onClick={this.handlerWindowClose}>\\n\\t\\t\\t\\t\\t\\t\\t\\tx\\n\\t\\t\\t\\t\\t\\t\\t</Button>\\n\\t\\t\\t\\t\\t\\t</ButtonGroup>\\n\\t\\t\\t\\t\\t</Row>\\n\\t\\t\\t\\t</Layout>\\n\\t\\t\\t\\t<Layout>\\n\\t\\t\\t\\t\\t<Sider collapsible onClick={this.toggle} style={{ minHeight: '100vh' }}>\\n\\t\\t\\t\\t\\t\\t<Menu\\n\\t\\t\\t\\t\\t\\t\\ttheme='dark'\\n\\t\\t\\t\\t\\t\\t\\tmode='inline'\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<SubMenu\\n\\t\\t\\t\\t\\t\\t\\t\\tkey='cap1'\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle={\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon type='folder' />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Carpeta 1</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='1'>Archetype 1</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='2'>Archetype 2</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='3'>Archetype 3</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='4'>Archetype 4</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t</SubMenu>\\n\\t\\t\\t\\t\\t\\t\\t<SubMenu\\n\\t\\t\\t\\t\\t\\t\\t\\tkey='cap2'\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle={\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon type='folder' />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Carpeta 2</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='5'>Archetype 1</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='6'>Archetype 2</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='7'>Archetype 3</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='8'>Archetype 4</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t</SubMenu>\\n\\t\\t\\t\\t\\t\\t\\t<SubMenu\\n\\t\\t\\t\\t\\t\\t\\t\\tkey='Blocks'\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle={\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon type='block' />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Bloques</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Menu.Item key='block1'>Bloque1</Menu.Item>\\n\\t\\t\\t\\t\\t\\t\\t</SubMenu>\\n\\t\\t\\t\\t\\t\\t</Menu>\\n\\t\\t\\t\\t\\t</Sider>\\n\\t\\t\\t\\t\\t<Layout>\\n\\t\\t\\t\\t\\t\\t<Content>\\n\\t\\t\\t\\t\\t\\t\\t<Layout>\\n\\t\\t\\t\\t\\t\\t\\t\\t<FileManager />\\n\\t\\t\\t\\t\\t\\t\\t</Layout>\\n\\t\\t\\t\\t\\t\\t</Content>\\n\\t\\t\\t\\t\\t\\t<Footer style={{ textAlign: 'center' }}>\\n\\t\\t\\t\\t\\t\\t\\tArchetypes ¬©2019 Created by WorkOrWate\\n\\t\\t\\t\\t\\t\\t</Footer>\\n\\t\\t\\t\\t\\t</Layout>\\n\\t\\t\\t\\t</Layout>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n}\\nconst mapStateToProps = state => {\\n\\treturn {\\n\\t\\ttitle: state.title,\\n\\t\\tdialogOpenFile: state.dialogOpenFile,\\n\\t\\tcurrentFile: state.currentFile,\\n\\t\\tfiles: state.files,\\n\\t\\telectron: state.electron\\n\\t};\\n}\\nconst mapDispatchToProps = dispatch => {\\n\\treturn {\\n\\t\\thandlerAdd(){\\n\\t\\t\\tdispatch(onEdit('add'));\\n\\t\\t},\\n\\t\\thandlerChangeTitle(newtitle) {\\n\\t\\t\\tdispatch(changeTitle(newtitle));\\n\\t\\t},\\n\\t\\thandlerDialogOpenFile(modalState) {\\n\\t\\t\\tdispatch(toggleOpenFileDialog(modalState));\\n\\t\\t},\\n\\t\\thandlerDownloadFile(ipc, file, files) {\\n\\t\\t\\thandlerDownload(ipc, file, files)\\n\\t\\t},\\n\\t\\thandlerSaveAsFile(ipc, file, files) {\\n\\t\\t\\thandlerSaveAs(ipc, file, files)\\n\\t\\t}\\n\\t}\\n}\\nnexport default connect(mapStateToProps, mapDispatchToProps)(Home);\";\n\nconst tablahandlerAddFiles = [\n    {\n      key: '1',\n      parametro: 'aFiles',\n      descripcion: 'Arreglo de objetos json con los datos de cada archivo seleccionado para cargar.',\n      tipo: 'Array',\n    },\n    {\n      key: '2',\n      parametro: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },\n    {\n      key: '3',\n      parametro: 'files',\n      descripcion: 'El arreglo que contiene los archivos en uso.',\n      tipo: 'Array',\n    },\n    {\n      key: '4',\n      parametro: 'ref',\n      descripcion: 'Referencia React al <input />.',\n      tipo: 'Referencia React',\n    }\n];\nconst tablaDropZoneFile = [\n    {\n      key: '1',\n      atributo: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },{\n        key: '2',\n        atributo: 'files',\n        descripcion: 'El arreglo que contiene los archivos en uso.',\n        tipo: 'Array',\n    }\n];\nexport const Homepage = {\n    \"title\": \"Pagina de Inicio\",\n    \"content\": (\n        <div>\n            <Title level={2}>El componenete \"Home.js\".</Title>\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    <Paragraph copyable>\n                        {\n                            codeString\n                        }\n                    </Paragraph>\n                </SyntaxHighlighter>\n            \n            <Title level={4}>La funci√≥n \"toggle\" .</Title>\n            <p>\n              Esta funci√≥n se encarga de expandir el contenido de los Sub Menu\".\n            </p>\n            <Title level={4}>Las funcines \"Menu\" .</Title>\n            <p>\n              Estas funciones son las que contienen nuestros menus de archivos, con las que podremos abrir, cargar, guardar, etc\".\n            </p>\n            \n            \n        </div>\n        )\n}","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Typography, Table } from 'antd';\nconst { Paragraph, Title } = Typography;\nconst { Column } = Table;\nconst codeString = \"import React, { Component } from 'react';\\nimport { BrowserRouter, Route } from 'react-router-dom';\\nimport { connect } from 'react-redux';\\nimport Home from './Home';\\nconst { electron } = window;\\n//import { DatePicker } from 'antd';\\nconst About = () => <h2>About</h2>;\\nclass App extends Component {\\n\\tconstructor(props) {\\n\\t\\tsuper(props);\\n\\t\\tthis.state = {\\n\\t\\tisMaximized:false,\\n\\t\\t} \\n\\t}\\n\\tcomponentWillMount(){\\n\\t\\tthis.props.setElectron(electron);\\n\\t\\tconst { ipcRenderer } = electron;\\n\\t\\tipcRenderer.on('mainWindow:isMaximized', (event, isMaximized) => {\\n\\t\\t\\tthis.setState({ isMaximized });\\n\\t\\t});\\n\\t\\tipcRenderer.send('mainWindow:isMaximized');\\n\\t}\\n\\trender(){\\n\\t\\treturn (\\n\\t\\t\\t<BrowserRouter>\\n\\t\\t\\t\\t<Route exact path='/' component={ Home } />\\n\\t\\t\\t\\t<Route path='/about' component={ About } />\\n\\t\\t\\t</BrowserRouter>\\n\\t\\t);\\n\\t}\\n}\\nconst mapStateToProps = state => {\\n\\treturn {\\n\\t\\tfiles: state.files,\\n\\t\\telectron: state.electron\\n\\t};\\n}\\nconst mapDispatchToProps = dispatch => {\\n\\treturn {\\n\\t\\tsetElectron(electron) {\\n\\t\\t\\tdispatch({\\n\\t\\t\\ttype: 'setElectron',\\n\\t\\t\\telectron\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n}\\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\";\n\nconst tablahandlerAddFiles = [\n    {\n      key: '1',\n      parametro: 'aFiles',\n      descripcion: 'Arreglo de objetos json con los datos de cada archivo seleccionado para cargar.',\n      tipo: 'Array',\n    },\n    {\n      key: '2',\n      parametro: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },\n    {\n      key: '3',\n      parametro: 'files',\n      descripcion: 'El arreglo que contiene los archivos en uso.',\n      tipo: 'Array',\n    },\n    {\n      key: '4',\n      parametro: 'ref',\n      descripcion: 'Referencia React al <input />.',\n      tipo: 'Referencia React',\n    }\n];\nconst tablaDropZoneFile = [\n    {\n      key: '1',\n      atributo: 'newTabIndex',\n      descripcion: 'El contador actual para agregar la Key al archivo nuevo (abierto o creado).',\n      tipo: 'N√∫mero',\n    },{\n        key: '2',\n        atributo: 'files',\n        descripcion: 'El arreglo que contiene los archivos en uso.',\n        tipo: 'Array',\n    }\n];\nexport const Appini = {\n    \"title\": \"La Aplicaci√≥n React\",\n    \"content\": (\n        <div>\n            <Title level={2}>El componenete \"App.js\".</Title>\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    <Paragraph copyable>\n                        {\n                            codeString\n                        }\n                    </Paragraph>\n                </SyntaxHighlighter>\n            \n            <Title level={4}>La funci√≥n \"mapStateToProps\" .</Title>\n            <p>La funci√≥n \"mapStateToProps\" es la que como dice su nombre, mapea el estado del store.js.</p>\n            <Title level={4}>La funci√≥n \"mapDispatchToProps\" .</Title>\n            <p>La funci√≥n \"mapDispatchToProps\" es la que como dice su nombre mapea el despacho (dispatch) de acciones (actions), Esta funci√≥n es la encargada de que al momento de que se comienze a renderizar la aplicaci√≥n se setea el electron en la store .</p>\n            <Title level={4}>La funci√≥n \"componentWillMount\" .</Title>\n            <p>\n               Nos ayuda a enviar mensajes sincr√≥nicos y asincr√≥nicos desde el proceso de renderizado(p√°gina web) al proceso principal, como controlar el estado al momento de tener nuestra ventana de la app maximizada.\n            </p>\n        </div>\n        )\n}","import React, { Component } from 'react';\nimport { Layout, Menu, Row, Icon, Input, Col, Typography } from 'antd';\nimport { InfraestructuraWeb } from './sections/InfraestructuraWeb';\nimport { InfraestructuraDesktop } from './sections/InfrestructuraDesktop';\nimport { Comenzando } from './sections/Comenzando';\nimport { AdministradorDeArchivos } from './sections/FileManager';\nimport { DropZoneFile } from './sections/DropZoneFile';\nimport { Homepage } from './sections/Homepage';\nimport { Appini } from './sections/Appini';\nimport './App.css';\nimport 'antd/dist/antd.css';\nconst { Title } = Typography;\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      collapsed: false,\n      content: Comenzando \n    }\n    this.toggleContent = this.toggleContent.bind(this);\n  }\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  toggleContent = (event) => {\n    console.log(event.item.props.children.length);\n    if (event.item.props.children.length === 2) {\n      if (event.item.props.children[1].props.children === \"Comenzando\") {\n        this.setState({\n          content: Comenzando\n        });\n      }\n    } else if (event.item.props.children === \"Aplicaci√≥n Web\") {\n      this.setState({\n        content: InfraestructuraWeb\n      });\n    } else if (event.item.props.children === \"Aplicaci√≥n Desktop\") {\n      this.setState({\n        content: InfraestructuraDesktop\n      });\n    } else if (event.item.props.children === \"Administrador de Archivos\") {\n      this.setState({\n        content: AdministradorDeArchivos\n      });\n    }  else if (event.item.props.children === \"Cargador de archivos\") {\n      this.setState({\n        content: DropZoneFile\n      });\n    } else if (event.item.props.children === \"Homepage\"){\n      this.setState({\n        content: Homepage\n      });\n    }else if (event.item.props.children === \"App\"){\n      this.setState({\n        content: Appini\n      });\n    }\n}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Layout >\n          <Sider \n              trigger={null}\n              collapsible \n              collapsed={this.state.collapsed} \n              onCollapse= {this.toggleCollapsed}\n              className=\"side-panel\">\n              <div className=\"logo\" />\n              <Menu\n                defaultSelectedKeys={['1']} \n                mode=\"inline\"\n                theme=\"dark\"\n              >\n                <Menu.Item key=\"1\" onClick={this.toggleContent}>\n                  <Icon type=\"pie-chart\" />\n                  <span>Comenzando</span>\n                </Menu.Item>\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"mail\" /><span>Infraestructura</span></span>}>\n                  <Menu.Item key=\"2\" onClick={this.toggleContent}>Aplicaci√≥n Web</Menu.Item>\n                  <Menu.Item key=\"3\" onClick={this.toggleContent}>Aplicaci√≥n Desktop</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" title={<span><Icon type=\"mail\" /><span>Componentes</span></span>}>\n                  <Menu.Item key=\"5\" onClick={this.toggleContent}>Administrador de Archivos</Menu.Item>\n                  <Menu.Item key=\"6\" onClick={this.toggleContent}>Cargador de archivos</Menu.Item>\n                  <Menu.Item key=\"7\" onClick={this.toggleContent}>Homepage</Menu.Item>\n                  <Menu.Item key=\"8\" onClick={this.toggleContent}>App</Menu.Item>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Layout>\n              <Header style={{ background: '#fff', padding: 0 }}>\n                <Row>\n                  <Col span={2}>\n                    <Icon\n                      className=\"trigger\"\n                      type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                      onClick={this.toggleCollapsed}\n                    />\n                  </Col>\n                  <Col span={22} className=\"menu-bar\">\n                    <Menu\n                    theme=\"light\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['1']}\n                    style={{ lineHeight: '64px'}}\n                  >\n                  <Menu.Item kay=\"1\" disabled>\n                    <Input.Search\n                      className=\"search\"\n                      placeholder=\"input search text\"\n                      style={{ width: 200 }}\n                      onSearch={value => console.log(value)}\n                    />\n                    </Menu.Item>\n                  <Menu.Item key=\"2\">nav 2</Menu.Item>\n                  <Menu.Item key=\"3\">nav 3</Menu.Item>\n                </Menu>\n                  </Col>\n                </Row>\n                \n              </Header>\n              <Content\n                style={{\n                  margin: '24px 16px',\n                  padding: 24,\n                  background: '#fff',\n                  minHeight: 280,\n                }}\n              >\n                <Title style={{ textAlign: 'center' }}>{this.state.content.title}</Title>\n                {this.state.content.content}\n              </Content>\n            </Layout>\n        </Layout>\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}